/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jdhaisne <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2016/04/25 13:49:51 by jdhaisne          #+#    #+#             */
/*   Updated: 2016/05/04 13:17:43 by jdhaisne         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_select.h"

int ft_putchar2(int i)
{
	ft_putchar(i);
	return (i);
}

int		get_max_word(t_dlist *dlist)
{
	int max_len;
	t_dnode *head;

	max_len = 0;
	head = dlist->head;
	while (head != NULL)
	{
		if(ft_strlen(head->data) > max_len)
			max_len = ft_strlen(head->data);
		head = head->next;
	}
	return (max_len);
}

int	show_menu(t_dlist *dlist, int nb_col)
{
	int		i;
	int		nb_word_col;
	int		word_max;
	int		j;
	t_dnode	*tmp;

	word_max = get_max_word(dlist) + 1;
	nb_word_col = tgetnum("co") / word_max;
	 i = 0;
	 tmp = dlist->head;
	while(tmp != NULL)
	{
		j = 0;
		ft_putstr(tmp->data);
		if((i + 1) % nb_word_col == 0 && (i + 1) != 0)
		{
			ft_putchar('\n');
			nb_col++;
		}
		else
		{
			while(ft_strlen(tmp->data) + j < word_max)
			{
				ft_putchar(' ');
				j++;
			}
		}
		i++;
		tmp = tmp->next;
	}
	return (nb_col);
}

char	**split_tab(char **tab, int i)
{
	int		size;
	int		j;
	char	**tab2;

	size = 0;
	j = 0;
	tab2 = NULL;
	while (tab[i + size] != NULL)
		size++;
	tab2 = (char **)ft_memalloc(sizeof(char *) * size + 1);
	while (j < size)
	{
		tab2[j] = strdup(tab[i + j]);
		j++;
	}
	tab2[size] = NULL;
	return (tab2);
}

int get_key()
{
	char *tmp;
	char line[3];

	while(1)
	{
		read(0, line, 3);
		if(line[0] == 27)
		{
			if(line[2] == 'C')
			{
				tmp = tgetstr("nd", NULL);
				tputs(tgoto(tmp, 0, 0), 1, ft_putchar2);
				return(0);
			}
			else if(line[2] == 'D')
			{
				tmp = tgetstr("le", NULL);
				tputs(tgoto(tmp, 0, 0), 1, ft_putchar2);
				return(0);
			}
			else if(line[2] == 'A')
			{
				tmp = tgetstr("up", NULL);
				tputs(tmp, 1, ft_putchar2);
				return(0);
			}
			else if(line[2] == 'B')
			{
				tmp = tgetstr("do", NULL);
				tputs(tmp, 1, ft_putchar2);
				return(0);
			}
		}
		else
			ft_putchar(line[0]);
			ft_putchar('i');
			ft_putchar(line[1]);
			ft_putchar('o');
			ft_putchar(line[2]);
			ft_putchar('q');
	}
}
